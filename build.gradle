buildscript {
    repositories {
        jcenter()
        mavenCentral()
        dependencies{
            classpath (group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.0.0')
        }
    }

	ext {
		springBootVersion = '2.1.2.RELEASE'
		jaxbTargetDir = file("src/main/java/com/wishcart/wishcart/generated")
	}
    configurations {
        xsd2java
    }
    dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.wishcart'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

artifactory {
    contextUrl = 'http://localhost:8081/artifactory'
    publish{
        repository{
            repoKey = 'example-repo-local'
            username = 'admin'
            password = 'password'

        }
    }
    resolve {
        repoKey = 'jcenter'
    }
}

dependencies{
    xsd2java "com.sun.xml.bind:jaxb-xjc:2.2.6"
    xsd2java "com.sun.xml.bind:jaxb-impl:2.2.6"
}

task xsd2java() {

    doLast {
        jaxbTargetDir.mkdirs()

        ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.xsd2java.asPath)
        ant.jaxbTargetDir = jaxbTargetDir


        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'external',
                schema: 'src/main/resources/schema/product.xsd'
        )

    }
}
dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-cache')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-integration')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile 'org.springframework.boot:spring-boot-starter-amqp'
    //compile('org.springframework.boot:spring-boot-starter-activemq')
	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile ('org.mapstruct:mapstruct:1.1.0.Final')
	compile ('org.mapstruct:mapstruct-processor:1.1.0.Final')
	compile('org.springframework.session:spring-session-jdbc')
	compile "com.hazelcast:hazelcast"
	compile "com.hazelcast:hazelcast-hibernate52"
	compile "com.hazelcast:hazelcast-spring"
	compile "io.springfox:springfox-swagger2:2.4.0"
	compile "io.springfox:springfox-swagger-ui:2.4.0"
	//compile "com.oracle:ojdbc7"
    //compile ('org.apache.activemq:activemq-all:5.4.2')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('com.h2database:h2')
    runtime files('src/main/resources/utilities/ojdbc6.jar')
	compileOnly('org.projectlombok:lombok')
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"
	testCompile('org.springframework.boot:spring-boot-test')
    testCompile ('org.assertj:assertj-core')
    testCompile ('junit:junit')
    testCompile ('org.mockito:mockito-core')
    testCompile ('com.github.springtestdbunit:spring-test-dbunit:1.0.1')
    testCompile ('org.springframework.security:spring-security-test')
    testCompile('org.dbunit:dbunit:2.4.9')
    testCompile "org.hamcrest:hamcrest-library"
	testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}
